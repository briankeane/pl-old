require 'spec_helper'
require 'timecop'
require 'pry-debugger'

describe 'a station' do
  it "is created with an id, user_id " do
    station = PL::Station.new({ id: 12, user_id: 19 })
    expect(station.id).to eq(12)
    expect(station.user_id).to eq(19)
  end

  describe 'playlist functions' do

    before (:each) do
      Timecop.travel(Time.local(2014, 5, 9, 10))
      @station = PL::database.create_station({ })
    end

    it "creates a first playlist" do
      #stub stuff

      @station.generate_playlist
      playlist = PL.db.get_full_playlist(@station.id)
      expect(playlist.size).to eq(4675)
      expect(@station.playlist_estimated_end_time).to eq(Time.now)
    end

    describe 'large playlists' do
      before(:each) do
        PL::SeedDB.run
        @station = PL::SeedDB.station1
      end

      it "estimates the end of the current playlist" do
        expect(PL.db.get_current_playlist(@station.id).size).to eq(2158)
        expect(@station.playlist_estimated_end_time.to_s).to eq('2014-05-24 12:11:56 -0500')
      end

      it "extends the playlist by a week" do
        # go to tommorow and make sure running it again doesn't add anything -- it's already at the max
        @station.generate_playlist
        Timecop.travel(2014, 5, 14, 10)
        @station.generate_playlist
        expect(PL.db.get_full_playlist(@station.id).size).to eq(4157)

        # but another week from now and it will...
        Timecop.travel(2014, 5, 15, 10)
        @station.generate_playlist
        expect(PL.db.get_full_playlist(@station.id).size).to eq(6566)
      end

      it "gets the current playlist_estimated_end_time" do
        Timecop.travel(2014, 5, 15, 10)
        @station.generate_playlist
        expect(@station.playlist_estimated_end_time.to_s).to eq("2014-05-23 00:04:48 -0500")
      end


      describe "get_playlist_by_air_time" do
        it "gets a playlist by it's airtime" do
          playlist = @station.get_playlist_by_air_time(Time.new(2014, 5, 19, 6, 55))
          expect(playlist.size).to eq(34)
          expect(playlist[0].current_position).to eq(3087)
          expect(playlist.last.current_position).to eq(3116)
        end

        it "gets the next_song_start_time" do
          expect(@station.next_song_start_time.to_s).to eq('2014-05-13 19:50:26 -0500')
        end
      end
    end

    after (:each) do
      Timecop.return
    end
  end
end
